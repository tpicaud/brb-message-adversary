{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2","program":"/home/tpicaud/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","elliptic_curve","--edition=2021","/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"ff\"","--cfg","feature=\"group\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"pkcs8\"","--cfg","feature=\"sec1\"","--cfg","feature=\"std\"","-C","metadata=581bf45156b09a8e","-C","extra-filename=-581bf45156b09a8e","--out-dir","/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps","-L","dependency=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps","--extern","base16ct=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libbase16ct-06b57071372ed7e0.rmeta","--extern","crypto_bigint=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libcrypto_bigint-8ee3d0790c717c7b.rmeta","--extern","der=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libder-cd6528676668d323.rmeta","--extern","digest=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libdigest-5c5aced7824a4428.rmeta","--extern","ff=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libff-65216422858aa8c4.rmeta","--extern","generic_array=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libgeneric_array-3461042ac24cc513.rmeta","--extern","group=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libgroup-7dd6832b457ed227.rmeta","--extern","pkcs8=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libpkcs8-1c3a66e234d7d016.rmeta","--extern","rand_core=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/librand_core-1b5cc875b7cb497b.rmeta","--extern","sec1=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libsec1-775277c6f504cdb7.rmeta","--extern","subtle=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libsubtle-045d338d50e14c25.rmeta","--extern","zeroize=/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libzeroize-7261bbb58997e76f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tpicaud/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tpicaud/Documents/Workspace/Rust/brb-msg-adversary/target/rls/debug/deps/libelliptic_curve-581bf45156b09a8e.rmeta"},"prelude":{"crate_id":{"name":"elliptic_curve","disambiguator":[3486470520508563887,0]},"crate_root":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src","external_crates":[{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":20,"id":{"name":"crypto_bigint","disambiguator":[13414467575522749676,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","num":21,"id":{"name":"generic_array","disambiguator":[5117534517313398275,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":22,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":23,"id":{"name":"subtle","disambiguator":[15969924641935166007,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":24,"id":{"name":"rand_core","disambiguator":[14749913703318114235,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":25,"id":{"name":"getrandom","disambiguator":[3704475170953657525,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":26,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":27,"id":{"name":"libc","disambiguator":[7983304030901990540,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","num":28,"id":{"name":"zeroize","disambiguator":[3369525983323063897,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":29,"id":{"name":"group","disambiguator":[9828398496524124998,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","num":30,"id":{"name":"ff","disambiguator":[12736192218260541892,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":31,"id":{"name":"digest","disambiguator":[16937099068230717828,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":32,"id":{"name":"crypto_common","disambiguator":[3746763567830879701,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","num":33,"id":{"name":"block_buffer","disambiguator":[10962747732163064116,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","num":34,"id":{"name":"sec1","disambiguator":[14953328145386100817,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","num":35,"id":{"name":"base16ct","disambiguator":[1115593688326845783,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key/pkcs8.rs","num":36,"id":{"name":"der","disambiguator":[17819762734250256616,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","num":37,"id":{"name":"const_oid","disambiguator":[14167798212880222160,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","num":38,"id":{"name":"pkcs8","disambiguator":[678265698261176576,0]}},{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","num":39,"id":{"name":"spki","disambiguator":[15420742632818275566,0]}}],"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":3125},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20952,"byte_end":20955,"line_start":3,"line_end":3,"column_start":21,"column_end":24},"alias_span":null,"name":"Add","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3156},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20957,"byte_end":20966,"line_start":3,"line_end":3,"column_start":26,"column_end":35},"alias_span":null,"name":"AddAssign","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3135},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20968,"byte_end":20971,"line_start":3,"line_end":3,"column_start":37,"column_end":40},"alias_span":null,"name":"Mul","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3152},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20973,"byte_end":20976,"line_start":3,"line_end":3,"column_start":42,"column_end":45},"alias_span":null,"name":"Neg","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3130},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20978,"byte_end":20981,"line_start":3,"line_end":3,"column_start":47,"column_end":50},"alias_span":null,"name":"Sub","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":3160},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20983,"byte_end":20992,"line_start":3,"line_end":3,"column_start":52,"column_end":61},"alias_span":null,"name":"SubAssign","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":34,"index":390},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24126,"byte_end":24137,"line_start":5,"line_end":5,"column_start":23,"column_end":34},"alias_span":null,"name":"Coordinates","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":34,"index":69},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24139,"byte_end":24150,"line_start":5,"line_end":5,"column_start":36,"column_end":47},"alias_span":null,"name":"ModulusSize","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":34,"index":429},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24152,"byte_end":24155,"line_start":5,"line_end":5,"column_start":49,"column_end":52},"alias_span":null,"name":"Tag","value":"","parent":{"krate":0,"index":70}},{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3347,"byte_end":3353,"line_start":108,"line_end":108,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3377,"byte_end":3394,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"alias_span":null,"name":"AffineXCoordinate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3396,"byte_end":3410,"line_start":110,"line_end":110,"column_start":28,"column_end":42},"alias_span":null,"name":"DecompactPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3412,"byte_end":3427,"line_start":110,"line_end":110,"column_start":44,"column_end":59},"alias_span":null,"name":"DecompressPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3429,"byte_end":3444,"line_start":110,"line_end":110,"column_start":61,"column_end":76},"alias_span":null,"name":"PointCompaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3446,"byte_end":3462,"line_start":110,"line_end":110,"column_start":78,"column_end":94},"alias_span":null,"name":"PointCompression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3490,"byte_end":3500,"line_start":112,"line_end":112,"column_start":20,"column_end":30},"alias_span":null,"name":"ScalarCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3502,"byte_end":3508,"line_start":112,"line_end":112,"column_start":32,"column_end":38},"alias_span":null,"name":"IsHigh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3527,"byte_end":3536,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3549,"byte_end":3562,"line_start":115,"line_end":115,"column_start":9,"column_end":22},"alias_span":null,"name":"bigint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3582,"byte_end":3595,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2827},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3613,"byte_end":3619,"line_start":116,"line_end":116,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3630,"byte_end":3639,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"alias_span":null,"name":"subtle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3665,"byte_end":3672,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"alias_span":null,"name":"zeroize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":809},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3763,"byte_end":3779,"line_start":125,"line_end":125,"column_start":13,"column_end":29},"alias_span":null,"name":"AffineArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3781,"byte_end":3801,"line_start":125,"line_end":125,"column_start":31,"column_end":51},"alias_span":null,"name":"PrimeCurveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3803,"byte_end":3823,"line_start":125,"line_end":125,"column_start":53,"column_end":73},"alias_span":null,"name":"ProjectiveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3825,"byte_end":3841,"line_start":125,"line_end":125,"column_start":75,"column_end":91},"alias_span":null,"name":"ScalarArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3874,"byte_end":3883,"line_start":127,"line_end":127,"column_start":21,"column_end":30},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3911,"byte_end":3924,"line_start":128,"line_end":128,"column_start":27,"column_end":40},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3926,"byte_end":3932,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3946,"byte_end":3948,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":62},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3957,"byte_end":3962,"line_start":130,"line_end":130,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":82},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3964,"byte_end":3974,"line_start":130,"line_end":130,"column_start":23,"column_end":33},"alias_span":null,"name":"PrimeField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3981,"byte_end":3986,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"alias_span":null,"name":"group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":176},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3995,"byte_end":4000,"line_start":131,"line_end":131,"column_start":19,"column_end":24},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4174,"byte_end":4179,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"alias_span":null,"name":"pkcs8","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":70},{"krate":0,"index":123},{"krate":0,"index":137},{"krate":0,"index":159},{"krate":0,"index":187},{"krate":0,"index":593},{"krate":0,"index":773},{"krate":0,"index":817},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045}],"decl_id":null,"docs":"# RustCrypto: Elliptic Curve Traits","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":286,"byte_end":330,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":331,"byte_end":394,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ ## Usage","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":396,"byte_end":408,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":409,"byte_end":412,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate provides traits for describing elliptic curves, along with","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":413,"byte_end":486,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ types which are generic over elliptic curves which can be used as the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":487,"byte_end":560,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ basis of curve-agnostic code.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":561,"byte_end":594,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":595,"byte_end":598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It's intended to be used with the following concrete elliptic curve","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":599,"byte_end":670,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ implementations from the [`RustCrypto/elliptic-curves`] project:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":671,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":740,"byte_end":743,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - [`bp256`]: brainpoolP256r1 and brainpoolP256t1","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":744,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ - [`bp384`]: brainpoolP384r1 and brainpoolP384t1","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":797,"byte_end":849,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ - [`k256`]: secp256k1 a.k.a. K-256","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":850,"byte_end":888,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ - [`p256`]: NIST P-256 a.k.a secp256r1, prime256v1","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":889,"byte_end":943,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ - [`p384`]: NIST P-384 a.k.a. secp384r1","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":944,"byte_end":987,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":988,"byte_end":991,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`ecdsa`] crate provides a generic implementation of the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":992,"byte_end":1056,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ Elliptic Curve Digital Signature Algorithm which can be used with any of","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1057,"byte_end":1133,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ the above crates, either via an external ECDSA implementation, or","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1134,"byte_end":1203,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ using native curve arithmetic where applicable.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1204,"byte_end":1255,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1256,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Type conversions","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1260,"byte_end":1283,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1284,"byte_end":1287,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The following chart illustrates the various conversions possible between","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1288,"byte_end":1364,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ the various types defined by this crate.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1365,"byte_end":1409,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1410,"byte_end":1413,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ![Type Conversion Map](https://raw.githubusercontent.com/RustCrypto/media/master/img/elliptic-curve/type-transforms.svg)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1414,"byte_end":1538,"line_start":36,"line_end":36,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1539,"byte_end":1542,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## `serde` support","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1543,"byte_end":1565,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1566,"byte_end":1569,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1570,"byte_end":1640,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the following types:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1641,"byte_end":1702,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - [`JwkEcKey`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1707,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ - [`PublicKey`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1726,"byte_end":1745,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ - [`ScalarCore`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1746,"byte_end":1766,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1767,"byte_end":1770,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1771,"byte_end":1835,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`RustCrypto/elliptic-curves`]: https://github.com/RustCrypto/elliptic-curves","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1840,"byte_end":1921,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ [`bp256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp256","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":1922,"byte_end":2000,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ [`bp384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp384","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2001,"byte_end":2079,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ [`k256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/k256","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2080,"byte_end":2156,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ [`p256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p256","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2157,"byte_end":2233,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ [`p384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p384","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2234,"byte_end":2310,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ [`ecdsa`]: https://github.com/RustCrypto/signatures/tree/master/ecdsa","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2311,"byte_end":2384,"line_start":55,"line_end":55,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":67}],"decl_id":null,"docs":" Traits for arithmetic operations on elliptic curve field elements.\n","sig":null,"attributes":[{"value":"/ Traits for arithmetic operations on elliptic curve field elements.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":20860,"byte_end":20930,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21266,"byte_end":21272,"line_start":14,"line_end":14,"column_start":11,"column_end":17},"name":"Invert","qualname":"::ops::Invert","value":"Invert","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Perform an inversion on a field element (i.e. base field element or scalar)\n","sig":null,"attributes":[{"value":"/ Perform an inversion on a field element (i.e. base field element or scalar)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21176,"byte_end":21255,"line_start":13,"line_end":13,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21311,"byte_end":21317,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::Invert::Output","value":"type Output;","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Field element type\n","sig":null,"attributes":[{"value":"/ Field element type","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21279,"byte_end":21301,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21359,"byte_end":21365,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"invert","qualname":"::ops::Invert::invert","value":"pub fn invert(&Self) -> Self::Output","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Invert a field element.\n","sig":null,"attributes":[{"value":"/ Invert a field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21324,"byte_end":21351,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21970,"byte_end":21987,"line_start":39,"line_end":39,"column_start":11,"column_end":28},"name":"LinearCombination","qualname":"::ops::LinearCombination","value":"LinearCombination: Group","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" Linear combination.","sig":null,"attributes":[{"value":"/ Linear combination.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21569,"byte_end":21592,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21593,"byte_end":21596,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait enables crates to provide an optimized implementation of","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21597,"byte_end":21668,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ linear combinations (e.g. Shamir's Trick), or otherwise provides a default","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21669,"byte_end":21747,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ non-optimized implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21748,"byte_end":21781,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21875,"byte_end":21905,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22040,"byte_end":22047,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"lincomb","qualname":"::ops::LinearCombination::lincomb","value":"pub fn lincomb(&Self, &Self::Scalar, &Self, &Self::Scalar) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Calculates `x * k + y * l`.\n","sig":null,"attributes":[{"value":"/ Calculates `x * k + y * l`.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22001,"byte_end":22032,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22184,"byte_end":22190,"line_start":47,"line_end":47,"column_start":11,"column_end":17},"name":"Reduce","qualname":"::ops::Reduce","value":"Reduce<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Modular reduction.\n","sig":null,"attributes":[{"value":"/ Modular reduction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22151,"byte_end":22173,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22302,"byte_end":22319,"line_start":49,"line_end":49,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"::ops::Reduce::from_uint_reduced","value":"pub fn from_uint_reduced(UInt) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22235,"byte_end":22294,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22450,"byte_end":22471,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"from_be_bytes_reduced","qualname":"::ops::Reduce::from_be_bytes_reduced","value":"pub fn from_be_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a big endian integer and perform\n a modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a big endian integer and perform","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22343,"byte_end":22413,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ a modular reduction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22418,"byte_end":22442,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22692,"byte_end":22713,"line_start":59,"line_end":59,"column_start":8,"column_end":29},"name":"from_le_bytes_reduced","qualname":"::ops::Reduce::from_le_bytes_reduced","value":"pub fn from_le_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a little endian integer and perform a\n modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a little endian integer and perform a","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22582,"byte_end":22657,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ modular reduction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22662,"byte_end":22684,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23004,"byte_end":23026,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"from_be_digest_reduced","qualname":"::ops::Reduce::from_be_digest_reduced","value":"pub fn from_be_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret a digest as a big endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a big endian integer and perform a modular","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22824,"byte_end":22892,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ reduction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22897,"byte_end":22911,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22916,"byte_end":22942,"line_start":65,"line_end":65,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23373,"byte_end":23395,"line_start":78,"line_end":78,"column_start":8,"column_end":30},"name":"from_le_digest_reduced","qualname":"::ops::Reduce::from_le_digest_reduced","value":"pub fn from_le_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Interpret a digest as a little endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a little endian integer and perform a modular","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23190,"byte_end":23261,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ reduction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23266,"byte_end":23280,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23285,"byte_end":23311,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23834,"byte_end":23847,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"ReduceNonZero","qualname":"::ops::ReduceNonZero","value":"ReduceNonZero<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Modular reduction to a non-zero output.","sig":null,"attributes":[{"value":"/ Modular reduction to a non-zero output.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23557,"byte_end":23600,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23601,"byte_end":23604,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This trait is primarily intended for use by curve implementations such","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23605,"byte_end":23679,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ as the `k256` and `p256` crates.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23680,"byte_end":23716,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23717,"byte_end":23720,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ End users should use the [`Reduce`] impl on","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23721,"byte_end":23768,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ [`NonZeroScalar`][`crate::NonZeroScalar`] instead.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23769,"byte_end":23823,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23959,"byte_end":23984,"line_start":95,"line_end":95,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"::ops::ReduceNonZero::from_uint_reduced_nonzero","value":"pub fn from_uint_reduced_nonzero(UInt) -> Self","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23892,"byte_end":23951,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sec1","qualname":"::sec1","value":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":120}],"decl_id":null,"docs":" Support for SEC1 elliptic curve encoding formats.","sig":null,"attributes":[{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2936,"byte_end":2960,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/ Support for SEC1 elliptic curve encoding formats.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24006,"byte_end":24059,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24060,"byte_end":24063,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24064,"byte_end":24102,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24400,"byte_end":24412,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::sec1::EncodedPoint","value":"sec1::point::EncodedPoint<FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point sized appropriately for a given curve.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point sized appropriately for a given curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24319,"byte_end":24390,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":109},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24628,"byte_end":24644,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"FromEncodedPoint","qualname":"::sec1::FromEncodedPoint","value":"FromEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" Trait for deserializing a value from a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for deserializing a value from a SEC1 encoded curve point.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24460,"byte_end":24528,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24529,"byte_end":24532,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24533,"byte_end":24617,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24804,"byte_end":24822,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"::sec1::FromEncodedPoint::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> CtOption<Self>","parent":{"krate":0,"index":109},"children":[],"decl_id":null,"docs":" Deserialize the type this trait is impl'd on from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Deserialize the type this trait is impl'd on from an [`EncodedPoint`].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24722,"byte_end":24796,"line_start":25,"line_end":25,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25034,"byte_end":25048,"line_start":32,"line_end":32,"column_start":11,"column_end":25},"name":"ToEncodedPoint","qualname":"::sec1::ToEncodedPoint","value":"ToEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24870,"byte_end":24934,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24935,"byte_end":24938,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":24939,"byte_end":25023,"line_start":31,"line_end":31,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25216,"byte_end":25232,"line_start":39,"line_end":39,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"::sec1::ToEncodedPoint::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25109,"byte_end":25181,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25186,"byte_end":25208,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25459,"byte_end":25480,"line_start":45,"line_end":45,"column_start":11,"column_end":32},"name":"ToCompactEncodedPoint","qualname":"::sec1::ToCompactEncodedPoint","value":"ToCompactEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point with compaction.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point with compaction.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25279,"byte_end":25359,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25360,"byte_end":25363,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25364,"byte_end":25448,"line_start":44,"line_end":44,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25648,"byte_end":25672,"line_start":52,"line_end":52,"column_start":8,"column_end":32},"name":"to_compact_encoded_point","qualname":"::sec1::ToCompactEncodedPoint::to_compact_encoded_point","value":"pub fn to_compact_encoded_point(&Self) -> CtOption<EncodedPoint<C>>","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25541,"byte_end":25613,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25618,"byte_end":25640,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":118},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25959,"byte_end":25976,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"ValidatePublicKey","qualname":"::sec1::ValidatePublicKey","value":"ValidatePublicKey","parent":null,"children":[{"krate":0,"index":119}],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] represents the encoded public key\n value of the given secret.","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] represents the encoded public key","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25713,"byte_end":25791,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ value of the given secret.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25792,"byte_end":25822,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25823,"byte_end":25826,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Curve implementations which also impl [`ProjectiveArithmetic`] will receive","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25827,"byte_end":25906,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ a blanket default impl of this trait.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":25907,"byte_end":25948,"line_start":59,"line_end":59,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26184,"byte_end":26203,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"validate_public_key","qualname":"::sec1::ValidatePublicKey::validate_public_key","value":"pub fn validate_public_key(&SecretKey<Self>, &EncodedPoint<Self>)\n-> Result<()>","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] is a valid public key for the\n provided secret value.\n","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] is a valid public key for the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26040,"byte_end":26114,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ provided secret value.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26119,"byte_end":26145,"line_start":66,"line_end":66,"column_start":5,"column_end":31}},{"value":"allow(unused_variables)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26150,"byte_end":26176,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weierstrass","qualname":"::weierstrass","value":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Complete projective formulas for prime order elliptic curves as described\n in [Renes-Costello-Batina 2015].","sig":null,"attributes":[{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3024,"byte_end":3054,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/ Complete projective formulas for prime order elliptic curves as described","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27215,"byte_end":27292,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ in [Renes-Costello-Batina 2015].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27293,"byte_end":27329,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27330,"byte_end":27333,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27334,"byte_end":27401,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"allow(clippy :: op_ref)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27403,"byte_end":27428,"line_start":6,"line_end":6,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27534,"byte_end":27545,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::weierstrass::AffinePoint","value":"(Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Affine point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Affine point whose coordinates are represented by the given field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27446,"byte_end":27524,"line_start":10,"line_end":10,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27655,"byte_end":27670,"line_start":14,"line_end":14,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::weierstrass::ProjectivePoint","value":"(Fe, Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Projective point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Projective point whose coordinates are represented by the given field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27563,"byte_end":27645,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27887,"byte_end":27890,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"add","qualname":"::weierstrass::add","value":"pub fn add<Fe>(ProjectivePoint<Fe>, ProjectivePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete addition formula from [Renes-Costello-Batina 2015]\n (Algorithm 4).","sig":null,"attributes":[{"value":"/ Implements the complete addition formula from [Renes-Costello-Batina 2015]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27692,"byte_end":27770,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ (Algorithm 4).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27771,"byte_end":27789,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27790,"byte_end":27793,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27794,"byte_end":27861,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":27862,"byte_end":27879,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29362,"byte_end":29371,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"add_mixed","qualname":"::weierstrass::add_mixed","value":"pub fn add_mixed<Fe>(ProjectivePoint<Fe>, AffinePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete mixed addition formula from\n [Renes-Costello-Batina 2015] (Algorithm 5).","sig":null,"attributes":[{"value":"/ Implements the complete mixed addition formula from","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29161,"byte_end":29216,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 5).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29217,"byte_end":29264,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29265,"byte_end":29268,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29269,"byte_end":29336,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":29337,"byte_end":29354,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30750,"byte_end":30756,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"double","qualname":"::weierstrass::double","value":"pub fn double<Fe>(ProjectivePoint<Fe>, Fe) -> ProjectivePoint<Fe> where\nFe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the exception-free point doubling formula from\n [Renes-Costello-Batina 2015] (Algorithm 6).","sig":null,"attributes":[{"value":"/ Implements the exception-free point doubling formula from","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30543,"byte_end":30604,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 6).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30605,"byte_end":30652,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30653,"byte_end":30656,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30657,"byte_end":30724,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/weierstrass.rs","byte_start":30725,"byte_end":30742,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":148},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32072,"byte_end":32078,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type with the `elliptic-curve` crate's [`Error`] type.\n","sig":null,"attributes":[{"value":"/ Result type with the `elliptic-curve` crate's [`Error`] type.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":31997,"byte_end":32062,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32200,"byte_end":32205,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Elliptic curve errors.\n","sig":null,"attributes":[{"value":"/ Elliptic curve errors.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32117,"byte_end":32143,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":32931,"byte_end":32948,"line_start":7,"line_end":7,"column_start":11,"column_end":28},"name":"AffineXCoordinate","qualname":"::point::AffineXCoordinate","value":"AffineXCoordinate<C: Curve>","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Obtain the affine x-coordinate of an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Obtain the affine x-coordinate of an elliptic curve point.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":32858,"byte_end":32920,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33035,"byte_end":33036,"line_start":9,"line_end":9,"column_start":8,"column_end":9},"name":"x","qualname":"::point::AffineXCoordinate::x","value":"pub fn x(&Self) -> FieldBytes<C>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Get the affine x-coordinate as a serialized field element.\n","sig":null,"attributes":[{"value":"/ Get the affine x-coordinate as a serialized field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":32965,"byte_end":33027,"line_start":8,"line_end":8,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33272,"byte_end":33287,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"DecompressPoint","qualname":"::point::DecompressPoint","value":"DecompressPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" Decompress an elliptic curve point.","sig":null,"attributes":[{"value":"/ Decompress an elliptic curve point.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33065,"byte_end":33104,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33105,"byte_end":33108,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Point decompression recovers an original curve point from its x-coordinate","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33109,"byte_end":33187,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ and a boolean flag indicating whether or not the y-coordinate is odd.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33188,"byte_end":33261,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33369,"byte_end":33379,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"decompress","qualname":"::point::DecompressPoint::decompress","value":"pub fn decompress(&FieldBytes<C>, Choice) -> CtOption<Self>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Attempt to decompress an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Attempt to decompress an elliptic curve point.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33311,"byte_end":33361,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33659,"byte_end":33673,"line_start":25,"line_end":25,"column_start":11,"column_end":25},"name":"DecompactPoint","qualname":"::point::DecompactPoint","value":"DecompactPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":182}],"decl_id":null,"docs":" Decompact an elliptic curve point from an x-coordinate.","sig":null,"attributes":[{"value":"/ Decompact an elliptic curve point from an x-coordinate.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33439,"byte_end":33498,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33499,"byte_end":33502,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Decompaction relies on properties of specially-generated keys but provides","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33503,"byte_end":33581,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ a more compact representation than standard point compression.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33582,"byte_end":33648,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33753,"byte_end":33762,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"decompact","qualname":"::point::DecompactPoint::decompact","value":"pub fn decompact(&FieldBytes<C>) -> CtOption<Self>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Attempt to decompact an elliptic curve point\n","sig":null,"attributes":[{"value":"/ Attempt to decompact an elliptic curve point","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33697,"byte_end":33745,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":183},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33846,"byte_end":33862,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"PointCompression","qualname":"::point::PointCompression","value":"PointCompression","parent":null,"children":[{"krate":0,"index":184}],"decl_id":null,"docs":" Point compression settings.\n","sig":null,"attributes":[{"value":"/ Point compression settings.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33804,"byte_end":33835,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33931,"byte_end":33946,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"COMPRESS_POINTS","qualname":"::point::PointCompression::COMPRESS_POINTS","value":"bool","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Should point compression be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compression be applied by default?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33869,"byte_end":33920,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33998,"byte_end":34013,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"PointCompaction","qualname":"::point::PointCompaction","value":"PointCompaction","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Point compaction settings.\n","sig":null,"attributes":[{"value":"/ Point compaction settings.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33957,"byte_end":33987,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":34081,"byte_end":34095,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"COMPACT_POINTS","qualname":"::point::PointCompaction::COMPACT_POINTS","value":"bool","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Should point compaction be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compaction be applied by default?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":34020,"byte_end":34070,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36440,"byte_end":36450,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"ScalarCore","qualname":"::scalar::core::ScalarCore","value":"ScalarCore {  }","parent":null,"children":[{"krate":0,"index":1062}],"decl_id":null,"docs":" Generic scalar type with core functionality.","sig":null,"attributes":[{"value":"/ Generic scalar type with core functionality.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35700,"byte_end":35748,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35749,"byte_end":35752,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type provides a baseline level of scalar arithmetic functionality","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35753,"byte_end":35827,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ which is always available for all curves, regardless of if they implement","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35828,"byte_end":35905,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ any arithmetic traits.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35906,"byte_end":35932,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35933,"byte_end":35936,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35937,"byte_end":35958,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35959,"byte_end":35962,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":35963,"byte_end":36041,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36042,"byte_end":36099,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36100,"byte_end":36103,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The serialization is a fixed-width big endian encoding. When used with","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36104,"byte_end":36178,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ textual formats, the binary data is encoded as hexadecimal.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36179,"byte_end":36242,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":290},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36602,"byte_end":36606,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::core::ScalarCore::<C>::ZERO","value":"Self","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Zero scalar.\n","sig":null,"attributes":[{"value":"/ Zero scalar.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36571,"byte_end":36587,"line_start":56,"line_end":56,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":291},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36707,"byte_end":36710,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::core::ScalarCore::<C>::ONE","value":"Self","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36664,"byte_end":36692,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":292},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36801,"byte_end":36808,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"MODULUS","qualname":"::scalar::core::ScalarCore::<C>::MODULUS","value":"C::UInt","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Scalar modulus.\n","sig":null,"attributes":[{"value":"/ Scalar modulus.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36767,"byte_end":36786,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36884,"byte_end":36890,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"random","qualname":"<ScalarCore<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`ScalarCore`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`ScalarCore`].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36835,"byte_end":36872,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37109,"byte_end":37112,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalarCore<C>>::new","value":"pub fn new(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scalar from [`Curve::UInt`].\n","sig":null,"attributes":[{"value":"/ Create a new scalar from [`Curve::UInt`].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37052,"byte_end":37097,"line_start":76,"line_end":76,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37291,"byte_end":37304,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<ScalarCore<C>>::from_be_bytes","value":"pub fn from_be_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from big endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from big endian bytes.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37231,"byte_end":37279,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37479,"byte_end":37492,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"from_be_slice","qualname":"<ScalarCore<C>>::from_be_slice","value":"pub fn from_be_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a big endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a big endian byte slice.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37412,"byte_end":37467,"line_start":86,"line_end":86,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37794,"byte_end":37807,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"from_le_bytes","qualname":"<ScalarCore<C>>::from_le_bytes","value":"pub fn from_le_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from little endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from little endian bytes.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37731,"byte_end":37782,"line_start":95,"line_end":95,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37985,"byte_end":37998,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_le_slice","qualname":"<ScalarCore<C>>::from_le_slice","value":"pub fn from_le_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a little endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a little endian byte slice.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":37915,"byte_end":37973,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38280,"byte_end":38287,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<ScalarCore<C>>::as_uint","value":"pub fn as_uint(&Self) -> &C::UInt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Borrow the inner `C::UInt`.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38237,"byte_end":38268,"line_start":109,"line_end":109,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38390,"byte_end":38398,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"as_limbs","qualname":"<ScalarCore<C>>::as_limbs","value":"pub fn as_limbs(&Self) -> &[Limb]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner limbs as a slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner limbs as a slice.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38340,"byte_end":38378,"line_start":114,"line_end":114,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38517,"byte_end":38524,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<ScalarCore<C>>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value equal to zero?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value equal to zero?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38458,"byte_end":38505,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38634,"byte_end":38641,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"is_even","qualname":"<ScalarCore<C>>::is_even","value":"pub fn is_even(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value even?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value even?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38584,"byte_end":38622,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38750,"byte_end":38756,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<ScalarCore<C>>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value odd?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value odd?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38701,"byte_end":38738,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38873,"byte_end":38884,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<ScalarCore<C>>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as big endian bytes.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38815,"byte_end":38861,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39020,"byte_end":39031,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<ScalarCore<C>>::to_le_bytes","value":"pub fn to_le_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as little endian bytes.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":38959,"byte_end":39008,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45735,"byte_end":45748,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"NonZeroScalar","qualname":"::scalar::nonzero::NonZeroScalar","value":"NonZeroScalar {  }","parent":null,"children":[{"krate":0,"index":1076}],"decl_id":null,"docs":" Non-zero scalar type.","sig":null,"attributes":[{"value":"/ Non-zero scalar type.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45279,"byte_end":45304,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45305,"byte_end":45308,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type ensures that its value is not zero, ala `core::num::NonZero*`.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45309,"byte_end":45385,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ To do this, the generic `S` type must impl both `Default` and","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45386,"byte_end":45451,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ `ConstantTimeEq`, with the requirement that `S::default()` returns 0.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45452,"byte_end":45525,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45526,"byte_end":45529,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the context of ECC, it's useful for ensuring that scalar multiplication","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45530,"byte_end":45608,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ cannot result in the point at infinity.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45609,"byte_end":45652,"line_start":29,"line_end":29,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45939,"byte_end":45945,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"random","qualname":"<NonZeroScalar<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random `NonZeroScalar`.\n","sig":null,"attributes":[{"value":"/ Generate a random `NonZeroScalar`.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45889,"byte_end":45927,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46431,"byte_end":46434,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<NonZeroScalar<C>>::new","value":"pub fn new(Scalar<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a scalar.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a scalar.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46374,"byte_end":46419,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46629,"byte_end":46638,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_repr","qualname":"<NonZeroScalar<C>>::from_repr","value":"pub fn from_repr(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode a [`NonZeroScalar`] from a big endian-serialized field element.\n","sig":null,"attributes":[{"value":"/ Decode a [`NonZeroScalar`] from a big endian-serialized field element.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46543,"byte_end":46617,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46808,"byte_end":46817,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_uint","qualname":"<NonZeroScalar<C>>::from_uint","value":"pub fn from_uint(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a `C::UInt`.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46748,"byte_end":46796,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":589},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34437,"byte_end":34443,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::scalar::Scalar","value":"<C as ScalarArithmetic>::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Scalar field element for a particular elliptic curve.\n","sig":null,"attributes":[{"value":"/ Scalar field element for a particular elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34285,"byte_end":34342,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34343,"byte_end":34373,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34896,"byte_end":34902,"line_start":29,"line_end":29,"column_start":11,"column_end":17},"name":"IsHigh","qualname":"::scalar::IsHigh","value":"IsHigh","parent":null,"children":[{"krate":0,"index":592}],"decl_id":null,"docs":" Is this scalar greater than n / 2?","sig":null,"attributes":[{"value":"/ Is this scalar greater than n / 2?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34709,"byte_end":34747,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34748,"byte_end":34751,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34752,"byte_end":34765,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34766,"byte_end":34769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - For scalars 0 through n / 2: `Choice::from(0)`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34770,"byte_end":34822,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ - For scalars (n / 2) + 1 through n - 1: `Choice::from(1)`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34823,"byte_end":34885,"line_start":28,"line_end":28,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34967,"byte_end":34974,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"is_high","qualname":"::scalar::IsHigh::is_high","value":"pub fn is_high(&Self) -> Choice","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar.rs","byte_start":34909,"byte_end":34959,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56054,"byte_end":56063,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::secret_key::SecretKey","value":"SecretKey {  }","parent":null,"children":[{"krate":0,"index":1082}],"decl_id":null,"docs":" Elliptic curve secret keys.","sig":null,"attributes":[{"value":"/ Elliptic curve secret keys.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55148,"byte_end":55179,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55180,"byte_end":55183,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type wraps a secret scalar value, helping to prevent accidental","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55184,"byte_end":55256,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ exposure and securely erasing the value from memory when dropped.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55257,"byte_end":55326,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55327,"byte_end":55330,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Parsing PKCS#8 Keys","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55331,"byte_end":55356,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55357,"byte_end":55360,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ PKCS#8 is a commonly used format for encoding secret keys (especially ones","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55361,"byte_end":55439,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ generated by OpenSSL).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55440,"byte_end":55466,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55467,"byte_end":55470,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Keys in PKCS#8 format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55471,"byte_end":55546,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55547,"byte_end":55588,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55589,"byte_end":55592,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55593,"byte_end":55604,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55605,"byte_end":55636,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55637,"byte_end":55644,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55645,"byte_end":55648,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve private key from PKCS#8, enable the `pkcs8`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55649,"byte_end":55724,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55725,"byte_end":55799,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the [`DecodePrivateKey`]  trait to parse it.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55800,"byte_end":55878,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55879,"byte_end":55882,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55883,"byte_end":55958,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":55959,"byte_end":56025,"line_start":84,"line_end":84,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56314,"byte_end":56320,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self where C: ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`SecretKey`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`SecretKey`].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56173,"byte_end":56209,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56214,"byte_end":56244,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56564,"byte_end":56567,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey<C>>::new","value":"pub fn new(ScalarCore<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new secret key from a scalar value.\n","sig":null,"attributes":[{"value":"/ Create a new secret key from a scalar value.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56504,"byte_end":56552,"line_start":107,"line_end":107,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56840,"byte_end":56854,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"as_scalar_core","qualname":"<SecretKey<C>>::as_scalar_core","value":"pub fn as_scalar_core(&Self) -> &ScalarCore<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner secret [`ScalarCore`] value.","sig":null,"attributes":[{"value":"/ Borrow the inner secret [`ScalarCore`] value.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56643,"byte_end":56692,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56697,"byte_end":56700,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56705,"byte_end":56725,"line_start":114,"line_end":114,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56730,"byte_end":56733,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56738,"byte_end":56769,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56774,"byte_end":56777,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56782,"byte_end":56828,"line_start":118,"line_end":118,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57210,"byte_end":57227,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"to_nonzero_scalar","qualname":"<SecretKey<C>>::to_nonzero_scalar","value":"pub fn to_nonzero_scalar(&Self) -> NonZeroScalar<C> where C: Curve +\nProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the secret [`NonZeroScalar`] value for this key.","sig":null,"attributes":[{"value":"/ Get the secret [`NonZeroScalar`] value for this key.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56913,"byte_end":56969,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56974,"byte_end":56977,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56982,"byte_end":57002,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57007,"byte_end":57010,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57015,"byte_end":57046,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57051,"byte_end":57054,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57059,"byte_end":57105,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57110,"byte_end":57140,"line_start":130,"line_end":130,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57510,"byte_end":57520,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey<C>>::public_key","value":"pub fn public_key(&Self) -> PublicKey<C> where C: Curve + ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the [`PublicKey`] which corresponds to this secret key\n","sig":null,"attributes":[{"value":"/ Get the [`PublicKey`] which corresponds to this secret key","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57343,"byte_end":57405,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57410,"byte_end":57440,"line_start":140,"line_end":140,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57747,"byte_end":57760,"line_start":150,"line_end":150,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<SecretKey<C>>::from_be_bytes","value":"pub fn from_be_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Deserialize raw secret scalar as a big endian integer.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":57677,"byte_end":57735,"line_start":149,"line_end":149,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58228,"byte_end":58239,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SecretKey<C>>::to_be_bytes","value":"pub fn to_be_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Serialize raw secret scalar as a big endian integer.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58160,"byte_end":58216,"line_start":167,"line_end":167,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58487,"byte_end":58500,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"from_sec1_der","qualname":"<SecretKey<C>>::from_sec1_der","value":"pub fn from_sec1_der(&[u8]) -> Result<Self> where C: Curve +\nValidatePublicKey, FieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58310,"byte_end":58389,"line_start":172,"line_end":172,"column_start":5,"column_end":84}},{"value":"cfg(all(feature = \"sec1\"))","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58394,"byte_end":58423,"line_start":173,"line_end":173,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":59020,"byte_end":59031,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"to_sec1_der","qualname":"<SecretKey<C>>::to_sec1_der","value":"pub fn to_sec1_der(&Self) -> der::Result<Zeroizing<Vec<u8>>> where C: Curve +\nProjectiveArithmetic, AffinePoint<C>: FromEncodedPoint<C> + ToEncodedPoint<C>,\nFieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Serialize secret key in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Serialize secret key in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58740,"byte_end":58809,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"cfg(all(feature = \"alloc\", feature = \"arithmetic\", feature = \"sec1\"))","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":58814,"byte_end":58886,"line_start":186,"line_end":186,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":809},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68387,"byte_end":68403,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"AffineArithmetic","qualname":"::arithmetic::AffineArithmetic","value":"AffineArithmetic: Curve + ScalarArithmetic","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" Elliptic curve with affine arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with affine arithmetic implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68265,"byte_end":68322,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":810},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68493,"byte_end":68504,"line_start":14,"line_end":14,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::arithmetic::AffineArithmetic::AffinePoint","value":"type AffinePoint: 'static\n        + AffineXCoordinate<Self>\n        + Copy\n        + Clone\n        + ConditionallySelectable\n        + ConstantTimeEq\n        + Debug\n        + Default\n        + DefaultIsZeroes\n        + Eq\n        + PartialEq\n        + Sized\n        + Send\n        + Sync;","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" Elliptic curve point in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Elliptic curve point in affine coordinates.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68436,"byte_end":68483,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":811},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68919,"byte_end":68939,"line_start":32,"line_end":32,"column_start":11,"column_end":31},"name":"PrimeCurveArithmetic","qualname":"::arithmetic::PrimeCurveArithmetic","value":"PrimeCurveArithmetic: PrimeCurve + ProjectiveArithmetic<ProjectivePoint = Self::CurveGroup>","parent":null,"children":[{"krate":0,"index":812}],"decl_id":null,"docs":" Prime order elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve with projective arithmetic implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68781,"byte_end":68854,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":812},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69068,"byte_end":69078,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"CurveGroup","qualname":"::arithmetic::PrimeCurveArithmetic::CurveGroup","value":"type CurveGroup: group::prime::PrimeCurve<Affine = <Self as AffineArithmetic>::AffinePoint>;","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Prime order elliptic curve group.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve group.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69021,"byte_end":69058,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":813},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69285,"byte_end":69305,"line_start":41,"line_end":41,"column_start":11,"column_end":31},"name":"ProjectiveArithmetic","qualname":"::arithmetic::ProjectiveArithmetic","value":"ProjectiveArithmetic: Curve + AffineArithmetic","parent":null,"children":[{"krate":0,"index":814}],"decl_id":null,"docs":" Elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with projective arithmetic implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69159,"byte_end":69220,"line_start":39,"line_end":39,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":814},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69630,"byte_end":69645,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::arithmetic::ProjectiveArithmetic::ProjectivePoint","value":"type ProjectivePoint: ConditionallySelectable\n        + ConstantTimeEq\n        + Default\n        + DefaultIsZeroes\n        + From<Self::AffinePoint>\n        + Into<Self::AffinePoint>\n        + LinearCombination\n        + group::Curve<AffineRepr = Self::AffinePoint>\n        + group::Group<Scalar = Self::Scalar>;","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Elliptic curve point in projective coordinates.","sig":null,"attributes":[{"value":"/ Elliptic curve point in projective coordinates.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69338,"byte_end":69389,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69394,"byte_end":69397,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`group::Group`]:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69402,"byte_end":69466,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/ - `'static`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69471,"byte_end":69486,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69491,"byte_end":69505,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69510,"byte_end":69525,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/ - [`Debug`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69530,"byte_end":69545,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/ - [`Eq`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69550,"byte_end":69562,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ - [`Sized`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69567,"byte_end":69582,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/ - [`Send`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69587,"byte_end":69601,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69606,"byte_end":69620,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":815},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70059,"byte_end":70075,"line_start":67,"line_end":67,"column_start":11,"column_end":27},"name":"ScalarArithmetic","qualname":"::arithmetic::ScalarArithmetic","value":"ScalarArithmetic: Curve","parent":null,"children":[{"krate":0,"index":816}],"decl_id":null,"docs":" Scalar arithmetic.\n","sig":null,"attributes":[{"value":"/ Scalar arithmetic.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69941,"byte_end":69963,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69964,"byte_end":69994,"line_start":65,"line_end":65,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":816},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70401,"byte_end":70407,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::arithmetic::ScalarArithmetic::Scalar","value":"type Scalar: DefaultIsZeroes\n        + From<ScalarCore<Self>>\n        + Into<FieldBytes<Self>>\n        + Into<Self::UInt>\n        + IsHigh\n        + ff::Field\n        + ff::PrimeField<Repr = FieldBytes<Self>>;","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" Scalar field type.","sig":null,"attributes":[{"value":"/ Scalar field type.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70089,"byte_end":70111,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70116,"byte_end":70119,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`ff::Field`]:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70124,"byte_end":70185,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ - `'static`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70190,"byte_end":70205,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70210,"byte_end":70224,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70229,"byte_end":70244,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/ - [`ConditionallySelectable`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70249,"byte_end":70282,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ - [`ConstantTimeEq`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70287,"byte_end":70311,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/ - [`Debug`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70316,"byte_end":70331,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - [`Default`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70336,"byte_end":70353,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ - [`Send`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70358,"byte_end":70372,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70377,"byte_end":70391,"line_start":79,"line_end":79,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72972,"byte_end":72981,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::public_key::PublicKey","value":"PublicKey {  }","parent":null,"children":[{"krate":0,"index":1088}],"decl_id":null,"docs":" Elliptic curve public keys.","sig":null,"attributes":[{"value":"/ Elliptic curve public keys.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71464,"byte_end":71495,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71496,"byte_end":71499,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type for [`AffinePoint`] which ensures an inner","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71500,"byte_end":71569,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ non-identity point and provides a common place to handle encoding/decoding.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71570,"byte_end":71649,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71650,"byte_end":71653,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Parsing \"SPKI\" Keys","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71654,"byte_end":71679,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71680,"byte_end":71683,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ X.509 `SubjectPublicKeyInfo` (SPKI) is a commonly used format for encoding","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71684,"byte_end":71762,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ public keys, notably public keys corresponding to PKCS#8 private keys.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71763,"byte_end":71837,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ (especially ones generated by OpenSSL).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71838,"byte_end":71881,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71882,"byte_end":71885,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Keys in SPKI format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71886,"byte_end":71959,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":71960,"byte_end":72001,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72002,"byte_end":72005,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72006,"byte_end":72017,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PUBLIC KEY-----","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72018,"byte_end":72048,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72049,"byte_end":72056,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72057,"byte_end":72060,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve public key from SPKI, enable the `pkcs8`","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72061,"byte_end":72133,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72134,"byte_end":72208,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72209,"byte_end":72246,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ [`elliptic_curve::pkcs8::DecodePublicKey`][`pkcs8::DecodePublicKey`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72247,"byte_end":72319,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ trait to parse it.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72320,"byte_end":72342,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72343,"byte_end":72346,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72347,"byte_end":72422,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72423,"byte_end":72489,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72490,"byte_end":72493,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72494,"byte_end":72515,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72516,"byte_end":72519,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72520,"byte_end":72598,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72599,"byte_end":72656,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72657,"byte_end":72660,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The serialization is binary-oriented and supports ASN.1 DER","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72661,"byte_end":72724,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ Subject Public Key Info (SPKI) as the encoding format.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72725,"byte_end":72783,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72784,"byte_end":72787,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For a more text-friendly encoding of public keys, use [`JwkEcKey`] instead.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":72788,"byte_end":72867,"line_start":72,"line_end":72,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73193,"byte_end":73204,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<PublicKey<C>>::from_affine","value":"pub fn from_affine(AffinePoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AffinePoint`] into a [`PublicKey`]\n","sig":null,"attributes":[{"value":"/ Convert an [`AffinePoint`] into a [`PublicKey`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73130,"byte_end":73181,"line_start":86,"line_end":86,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73545,"byte_end":73563,"line_start":97,"line_end":97,"column_start":12,"column_end":30},"name":"from_secret_scalar","qualname":"<PublicKey<C>>::from_secret_scalar","value":"pub fn from_secret_scalar(&NonZeroScalar<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value\n (i.e. a secret key represented as a raw scalar value)\n","sig":null,"attributes":[{"value":"/ Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73406,"byte_end":73471,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/ (i.e. a secret key represented as a raw scalar value)","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73476,"byte_end":73533,"line_start":96,"line_end":96,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74108,"byte_end":74123,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<PublicKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self> where C: Curve,\nFieldSize<C>: ModulusSize, AffinePoint<C>: FromEncodedPoint<C> +\nToEncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`PublicKey`] (compressed or uncompressed) from the\n `Elliptic-Curve-Point-to-Octet-String` encoding described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode [`PublicKey`] (compressed or uncompressed) from the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73796,"byte_end":73858,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding described in","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73863,"byte_end":73927,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73932,"byte_end":73992,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73997,"byte_end":74017,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74022,"byte_end":74025,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74030,"byte_end":74067,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74072,"byte_end":74096,"line_start":110,"line_end":110,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74581,"byte_end":74590,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"as_affine","qualname":"<PublicKey<C>>::as_affine","value":"pub fn as_affine(&Self) -> &AffinePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner [`AffinePoint`] from this [`PublicKey`].","sig":null,"attributes":[{"value":"/ Borrow the inner [`AffinePoint`] from this [`PublicKey`].","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74445,"byte_end":74506,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74511,"byte_end":74514,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ In ECC, public keys are elliptic curve points.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74519,"byte_end":74569,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74737,"byte_end":74750,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<PublicKey<C>>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve\n","sig":null,"attributes":[{"value":"/ Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":74650,"byte_end":74725,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1034},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4504,"byte_end":4517,"line_start":152,"line_end":152,"column_start":11,"column_end":24},"name":"ALGORITHM_OID","qualname":"::ALGORITHM_OID","value":"pkcs8::ObjectIdentifier","parent":null,"children":[],"decl_id":null,"docs":" Algorithm [`ObjectIdentifier`][`pkcs8::ObjectIdentifier`] for elliptic\n curve public key cryptography (`id-ecPublicKey`).","sig":null,"attributes":[{"value":"/ Algorithm [`ObjectIdentifier`][`pkcs8::ObjectIdentifier`] for elliptic","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4238,"byte_end":4312,"line_start":146,"line_end":146,"column_start":1,"column_end":75}},{"value":"/ curve public key cryptography (`id-ecPublicKey`).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4313,"byte_end":4366,"line_start":147,"line_end":147,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4367,"byte_end":4370,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ <http://oid-info.com/get/1.2.840.10045.2.1>","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4371,"byte_end":4418,"line_start":149,"line_end":149,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"pkcs8\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4419,"byte_end":4444,"line_start":150,"line_end":150,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1035},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4934,"byte_end":4939,"line_start":163,"line_end":163,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: 'static + Copy + Clone + Debug + Default + Eq + Ord + Send + Sync","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" Elliptic curve.","sig":null,"attributes":[{"value":"/ Elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4608,"byte_end":4627,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4628,"byte_end":4631,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be impl'd by a ZST which represents a concrete","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4632,"byte_end":4708,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4709,"byte_end":4728,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4729,"byte_end":4732,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Other traits in this crate which are bounded by [`Curve`] are intended to","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4733,"byte_end":4810,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ be impl'd by these ZSTs, facilitating types which are generic over elliptic","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4811,"byte_end":4890,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ curves (e.g. [`SecretKey`]).","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4891,"byte_end":4923,"line_start":162,"line_end":162,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1036},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5246,"byte_end":5250,"line_start":167,"line_end":167,"column_start":10,"column_end":14},"name":"UInt","qualname":"::Curve::UInt","value":"type UInt: bigint::AddMod<Output = Self::UInt>\n        + bigint::ArrayEncoding\n        + bigint::Encoding\n        + bigint::Integer\n        + bigint::NegMod<Output = Self::UInt>\n        + bigint::Random\n        + bigint::RandomMod\n        + bigint::SubMod<Output = Self::UInt>\n        + zeroize::Zeroize;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Integer type used to represent field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Integer type used to represent field elements of this elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5013,"byte_end":5086,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":1037},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5738,"byte_end":5743,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"name":"ORDER","qualname":"::Curve::ORDER","value":"Self::UInt","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Order constant.","sig":null,"attributes":[{"value":"/ Order constant.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5551,"byte_end":5570,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5575,"byte_end":5578,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Subdivided into either 32-bit or 64-bit \"limbs\" (depending on the","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5583,"byte_end":5652,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ target CPU's word size), specified from least to most significant.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5657,"byte_end":5727,"line_start":180,"line_end":180,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1038},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5825,"byte_end":5835,"line_start":185,"line_end":185,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::PrimeCurve","value":"PrimeCurve: Curve","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for elliptic curves with prime order.\n","sig":null,"attributes":[{"value":"/ Marker trait for elliptic curves with prime order.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5760,"byte_end":5814,"line_start":184,"line_end":184,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5907,"byte_end":5916,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"name":"FieldSize","qualname":"::FieldSize","value":"<<C as Curve>::UInt as bigint::ArrayEncoding>::ByteSize","parent":null,"children":[],"decl_id":null,"docs":" Size of field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of field elements of this elliptic curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5847,"byte_end":5897,"line_start":187,"line_end":187,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1041},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6062,"byte_end":6072,"line_start":191,"line_end":191,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"GenericArray<u8, FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Byte representation of a base/scalar field element of a given curve.\n","sig":null,"attributes":[{"value":"/ Byte representation of a base/scalar field element of a given curve.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5980,"byte_end":6052,"line_start":190,"line_end":190,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1043},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6297,"byte_end":6308,"line_start":197,"line_end":197,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::AffinePoint","value":"<C as AffineArithmetic>::AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Affine point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Affine point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6111,"byte_end":6182,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6183,"byte_end":6202,"line_start":194,"line_end":194,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6257,"byte_end":6287,"line_start":196,"line_end":196,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1045},"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6543,"byte_end":6558,"line_start":203,"line_end":203,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::ProjectivePoint","value":"<C as ProjectiveArithmetic>::ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Projective point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Projective point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6353,"byte_end":6428,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ implementation.","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6429,"byte_end":6448,"line_start":200,"line_end":200,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":6449,"byte_end":6479,"line_start":201,"line_end":201,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21454,"byte_end":21455,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26753,"byte_end":26754,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32225,"byte_end":32230,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32372,"byte_end":32377,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32500,"byte_end":32505,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32623,"byte_end":32628,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32744,"byte_end":32749,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36531,"byte_end":36541,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39143,"byte_end":39153,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39522,"byte_end":39532,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39661,"byte_end":39671,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39906,"byte_end":39916,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40065,"byte_end":40075,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40227,"byte_end":40237,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40392,"byte_end":40402,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40432,"byte_end":40442,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40472,"byte_end":40482,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40614,"byte_end":40624,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40767,"byte_end":40777,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40917,"byte_end":40927,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41085,"byte_end":41095,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41252,"byte_end":41262,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41494,"byte_end":41504,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41652,"byte_end":41662,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41804,"byte_end":41814,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41971,"byte_end":41981,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42213,"byte_end":42223,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42371,"byte_end":42381,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42508,"byte_end":42518,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42851,"byte_end":42861,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43019,"byte_end":43029,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43185,"byte_end":43195,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43378,"byte_end":43388,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43570,"byte_end":43580,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45827,"byte_end":45840,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46965,"byte_end":46978,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47126,"byte_end":47139,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47400,"byte_end":47413,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47571,"byte_end":47584,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47644,"byte_end":47657,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47833,"byte_end":47843,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48018,"byte_end":48028,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48200,"byte_end":48210,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48418,"byte_end":48428,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48632,"byte_end":48645,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48807,"byte_end":48820,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49078,"byte_end":49091,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49378,"byte_end":49391,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49525,"byte_end":49538,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49824,"byte_end":49837,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50042,"byte_end":50055,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50510,"byte_end":50523,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50758,"byte_end":50771,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51119,"byte_end":51132,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51523,"byte_end":51536,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51885,"byte_end":51898,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52073,"byte_end":52086,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52284,"byte_end":52297,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52493,"byte_end":52506,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key/pkcs8.rs","byte_start":66028,"byte_end":66037,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key/pkcs8.rs","byte_start":66562,"byte_end":66571,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56134,"byte_end":56143,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":62980,"byte_end":62989,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63127,"byte_end":63136,"line_start":316,"line_end":316,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63406,"byte_end":63415,"line_start":326,"line_end":326,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63455,"byte_end":63464,"line_start":328,"line_end":328,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63576,"byte_end":63585,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63615,"byte_end":63624,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63855,"byte_end":63864,"line_start":350,"line_end":350,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":64749,"byte_end":64758,"line_start":377,"line_end":377,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":65026,"byte_end":65035,"line_start":388,"line_end":388,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73068,"byte_end":73077,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76414,"byte_end":76423,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76565,"byte_end":76574,"line_start":191,"line_end":191,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76725,"byte_end":76734,"line_start":195,"line_end":195,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":77354,"byte_end":77363,"line_start":212,"line_end":212,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":77842,"byte_end":77854,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78232,"byte_end":78244,"line_start":240,"line_end":240,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78625,"byte_end":78634,"line_start":253,"line_end":253,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78965,"byte_end":78974,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":79566,"byte_end":79575,"line_start":282,"line_end":282,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":80196,"byte_end":80205,"line_start":299,"line_end":299,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3017,"byte_end":3021,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":3117,"byte_end":3128,"line_start":92,"line_end":92,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":123}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21454,"byte_end":21455,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":21989,"byte_end":21994,"line_start":39,"line_end":39,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":29,"index":176},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":22223,"byte_end":22228,"line_start":47,"line_end":47,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/ops.rs","byte_start":23880,"byte_end":23885,"line_start":93,"line_end":93,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/sec1.rs","byte_start":26753,"byte_end":26754,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":118}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32225,"byte_end":32230,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32372,"byte_end":32377,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32500,"byte_end":32505,"line_start":28,"line_end":28,"column_start":29,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32623,"byte_end":32628,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/error.rs","byte_start":32744,"byte_end":32749,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1047},"to":{"krate":5,"index":2546}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33299,"byte_end":33304,"line_start":16,"line_end":16,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":177}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/point.rs","byte_start":33685,"byte_end":33690,"line_start":25,"line_end":25,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":36531,"byte_end":36541,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39143,"byte_end":39153,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39522,"byte_end":39532,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39661,"byte_end":39671,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1060},"to":{"krate":23,"index":65}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":39906,"byte_end":39916,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1060},"to":{"krate":23,"index":57}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40065,"byte_end":40075,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1060},"to":{"krate":23,"index":108}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40227,"byte_end":40237,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1060},"to":{"krate":23,"index":105}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40392,"byte_end":40402,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1060},"to":{"krate":28,"index":99}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40432,"byte_end":40442,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40472,"byte_end":40482,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40614,"byte_end":40624,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40767,"byte_end":40777,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":40917,"byte_end":40927,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41085,"byte_end":41095,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41252,"byte_end":41262,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41494,"byte_end":41504,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41652,"byte_end":41662,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41804,"byte_end":41814,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":41971,"byte_end":41981,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42213,"byte_end":42223,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42371,"byte_end":42381,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42508,"byte_end":42518,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":42851,"byte_end":42861,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1060},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43019,"byte_end":43029,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43185,"byte_end":43195,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":9691}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43378,"byte_end":43388,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":9693}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/core.rs","byte_start":43570,"byte_end":43580,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":12317}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":45827,"byte_end":45840,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":46965,"byte_end":46978,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47126,"byte_end":47139,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1074},"to":{"krate":23,"index":65}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47400,"byte_end":47413,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1074},"to":{"krate":23,"index":57}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47571,"byte_end":47584,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47644,"byte_end":47657,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":47833,"byte_end":47843,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48018,"byte_end":48028,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1041},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48200,"byte_end":48210,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48418,"byte_end":48428,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1060},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48632,"byte_end":48645,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":48807,"byte_end":48820,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49078,"byte_end":49091,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49378,"byte_end":49391,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49525,"byte_end":49538,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":49824,"byte_end":49837,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50042,"byte_end":50055,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50510,"byte_end":50523,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":50758,"byte_end":50771,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51119,"byte_end":51132,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51523,"byte_end":51536,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1074},"to":{"krate":28,"index":96}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":51885,"byte_end":51898,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52073,"byte_end":52086,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":9691}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52284,"byte_end":52297,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":9693}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/scalar/nonzero.rs","byte_start":52493,"byte_end":52506,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":12317}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key/pkcs8.rs","byte_start":66028,"byte_end":66037,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key/pkcs8.rs","byte_start":66562,"byte_end":66571,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1080},"to":{"krate":38,"index":124}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":56134,"byte_end":56143,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":62980,"byte_end":62989,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1080},"to":{"krate":23,"index":57}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63127,"byte_end":63136,"line_start":316,"line_end":316,"column_start":19,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63406,"byte_end":63415,"line_start":326,"line_end":326,"column_start":27,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1080},"to":{"krate":28,"index":98}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63455,"byte_end":63464,"line_start":328,"line_end":328,"column_start":18,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63576,"byte_end":63585,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63615,"byte_end":63624,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":63855,"byte_end":63864,"line_start":350,"line_end":350,"column_start":45,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":64749,"byte_end":64758,"line_start":377,"line_end":377,"column_start":36,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/secret_key.rs","byte_start":65026,"byte_end":65035,"line_start":388,"line_end":388,"column_start":37,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68405,"byte_end":68410,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68413,"byte_end":68429,"line_start":12,"line_end":12,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":815},"to":{"krate":0,"index":809}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68945,"byte_end":68955,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":1038},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":68958,"byte_end":68978,"line_start":33,"line_end":33,"column_start":18,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":813},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69307,"byte_end":69312,"line_start":41,"line_end":41,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":69315,"byte_end":69331,"line_start":41,"line_end":41,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":809},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/arithmetic.rs","byte_start":70077,"byte_end":70082,"line_start":67,"line_end":67,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":73068,"byte_end":73077,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76414,"byte_end":76423,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76565,"byte_end":76574,"line_start":191,"line_end":191,"column_start":18,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":76725,"byte_end":76734,"line_start":195,"line_end":195,"column_start":33,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1086},"to":{"krate":0,"index":109}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":77354,"byte_end":77363,"line_start":212,"line_end":212,"column_start":31,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1086},"to":{"krate":0,"index":112}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":77842,"byte_end":77854,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78232,"byte_end":78244,"line_start":240,"line_end":240,"column_start":33,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78625,"byte_end":78634,"line_start":253,"line_end":253,"column_start":24,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":78965,"byte_end":78974,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":79566,"byte_end":79575,"line_start":282,"line_end":282,"column_start":54,"column_end":63},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/public_key.rs","byte_start":80196,"byte_end":80205,"line_start":299,"line_end":299,"column_start":29,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1086},"to":{"krate":39,"index":170}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4951,"byte_end":4955,"line_start":163,"line_end":163,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4958,"byte_end":4963,"line_start":163,"line_end":163,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4966,"byte_end":4971,"line_start":163,"line_end":163,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9678},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4974,"byte_end":4981,"line_start":163,"line_end":163,"column_start":51,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4984,"byte_end":4986,"line_start":163,"line_end":163,"column_start":61,"column_end":63},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4989,"byte_end":4992,"line_start":163,"line_end":163,"column_start":66,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":4995,"byte_end":4999,"line_start":163,"line_end":163,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3057},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5002,"byte_end":5006,"line_start":163,"line_end":163,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":3069},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/tpicaud/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.2/src/lib.rs","byte_start":5837,"byte_end":5842,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1038}}]}